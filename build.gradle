plugins {
    id 'com.verificationgentleman.gradle.hdvl.systemverilog' version '0.2.7'
    id 'com.verificationgentleman.gradle.hdvl.c' version '0.2.7'
}

group 'com.verificationgentleman'

sourceSets {
    main {
        sv {
            srcDirs = ['sv']
        }
        c {
            srcDirs = ['c']
        }
    }
}

sourceSets {
    attrsExample {
        sv {
            srcDir 'examples/attributes'
        }
    }
    paramsExample {
        sv {
            srcDir 'examples/parameters'
        }
    }
}

dependencies {
    attrsExampleCompile files(genXrunArgsFile.destination)
    paramsExampleCompile files(genXrunArgsFile.destination)
}

abstract class RunExample extends DefaultTask {
    @InputFile
    abstract RegularFileProperty getFullXrunArgsFile()

    @OutputDirectory
    abstract DirectoryProperty getWorkingDir()

    @TaskAction
    def run() {
        def workDir = workingDir
        project.exec {
            executable 'xrun'
            args'-f', fullXrunArgsFile.get().asFile
            args '-access', 'rwc'
            args '-top', 'top'
            workingDir workDir
        }
    }
}

task runAttrsExample(type: RunExample) {
    fullXrunArgsFile = genFullAttrsExampleXrunArgsFile.destination
    workingDir = file("$buildDir/attrs-example")
    outputs.upToDateWhen { false }
}

task runParamsExample(type: RunExample) {
    fullXrunArgsFile = genFullParamsExampleXrunArgsFile.destination
    workingDir = file("$buildDir/params-example")
    outputs.upToDateWhen { false }
}
